### Take a deep look at the dataset and Pandas series we are working with

# Import the Pandas library
import pandas as pd

# Read in the data from the CSV file
data = pd.read_csv('leadersdata.csv')
data

data.columns

# Setting Player's Name as the index
data.set_index('Player', inplace=True)

# Creating pandas series for each column
innings = data['I']
runs = data['R']
balls = data['B']
outs = data['Outs']
batting_average = data['Avg']
strike_rate = data['SR']
highest_score = data['HS']
number_of_fours = data['4s']
number_of_sixes = data['6s']
number_of_fifties = data['50']
number_of_hundreds = data['100']


# Printing the first 5 rows of each series
print("Innings:\n", innings.head())
print("Runs:\n", runs.head())
print("Balls:\n", balls.head())
print("Outs:\n", outs.head())
print("Batting Average:\n", batting_average.head())
print("Strike Rate:\n", strike_rate.head())
print("Highest Score:\n", highest_score.head())
print("Number of Fours:\n", number_of_fours.head())
print("Number of Sixes:\n", number_of_sixes.head())
print("Number of Fifties:\n", number_of_fifties.head())
print("Number of Hundreds:\n", number_of_hundreds.head())

### Activities

##### 1. How many players have a batting average greater than 30 in the `batting_average` series

len(batting_average[batting_average > 30])

##### 2. What is the maximum number of runs scored by a player in the `runs` series

runs.max()

##### 3. Name the player with maximum runs

runs[runs == runs.max()]

##### 4. Name the player who played least number of balls

balls[balls == balls.min()]

##### 5. How many players have played more than 500 balls in the `balls` series

len(balls[balls > 500])

##### 6. What is the mean value of the `batting_average` series

batting_average.mean()

##### 7. How many players have a strike rate not equal to 70 in the `strike_rate` series 

len(strike_rate[strike_rate!=70])

##### 8. What is the minimum number of innings played by a player in the `innings` series

innings.min()

##### 9. How many players have a batting average greater than 50 in the `batting_average` series

len(batting_average[batting_average > 50])

##### 10. How many players have a batting average between 20 and 30 (inclusive) in the `batting_average` series

len(batting_average[(batting_average >= 20) & (batting_average <= 30)])

##### 11. Calculating the Average Balls Faced by a Player

balls.mean()

##### 12. How many players have a strike rate greater than 120 in the `strike_rate` series

len(strike_rate[strike_rate > 120])

##### 13. Provide the names of the top three players from the `strike_rate` series

strike_rate.sort_values(ascending = False).head(3)

##### 14. Sum of Maximums from `number_of_fours` and `number_of_sixes` Series

number_of_fours.max() + number_of_sixes.max()

##### 15. How many players have a batting average below 10 in the `batting_average` series

len(batting_average[batting_average < 10])

##### 16. Name the player who hit maximum sixes

number_of_sixes[number_of_sixes == number_of_sixes.max()]

##### 17. How many players have a strike rate between 80 and 90 (inclusive) in the `strike_rate` series

len(strike_rate[(strike_rate >= 80) & (strike_rate <= 90)])

##### 18. What is the total number of runs scored by all players in the `runs` series

runs.sum()

##### 19. What is the range (difference between the maximum and minimum values) of the `number_of_fifties` series

number_of_fifties.max() - number_of_fifties.min()

How many players have a strike rate below 60 in the `strike_rate` series?

len(strike_rate[strike_rate < 60])

##### 21. Calculating the Mean Number of Boundaries (Fours + Sixes) Hit by a Player

(number_of_fours + number_of_sixes).mean()

##### 22. Players with highest score in `highest_score` series

sorted_scores = highest_score.sort_values(ascending=False)
top_five_scores = sorted_scores.head(5)
print(top_five_scores)

### The End!
